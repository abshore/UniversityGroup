<?php

namespace Proxies\__CG__\Gestion\UserBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Cursus extends \Gestion\UserBundle\Entity\Cursus implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setLoisirs($loisirs)
    {
        $this->__load();
        return parent::setLoisirs($loisirs);
    }

    public function getLoisirs()
    {
        $this->__load();
        return parent::getLoisirs();
    }

    public function setTitre($titre)
    {
        $this->__load();
        return parent::setTitre($titre);
    }

    public function getTitre()
    {
        $this->__load();
        return parent::getTitre();
    }

    public function setPresentation($presentation)
    {
        $this->__load();
        return parent::setPresentation($presentation);
    }

    public function getPresentation()
    {
        $this->__load();
        return parent::getPresentation();
    }

    public function addFormation(\Gestion\UserBundle\Entity\Formation $formations)
    {
        $this->__load();
        return parent::addFormation($formations);
    }

    public function removeFormation(\Gestion\UserBundle\Entity\Formation $formations)
    {
        $this->__load();
        return parent::removeFormation($formations);
    }

    public function getFormations()
    {
        $this->__load();
        return parent::getFormations();
    }

    public function addExperience(\Gestion\UserBundle\Entity\Experience $experiences)
    {
        $this->__load();
        return parent::addExperience($experiences);
    }

    public function removeExperience(\Gestion\UserBundle\Entity\Experience $experiences)
    {
        $this->__load();
        return parent::removeExperience($experiences);
    }

    public function getExperiences()
    {
        $this->__load();
        return parent::getExperiences();
    }

    public function addLangue(\Gestion\UserBundle\Entity\Langue $langues)
    {
        $this->__load();
        return parent::addLangue($langues);
    }

    public function removeLangue(\Gestion\UserBundle\Entity\Langue $langues)
    {
        $this->__load();
        return parent::removeLangue($langues);
    }

    public function getLangues()
    {
        $this->__load();
        return parent::getLangues();
    }

    public function setUser(\Gestion\UserBundle\Entity\User $user = NULL)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setNomcv($nomcv)
    {
        $this->__load();
        return parent::setNomcv($nomcv);
    }

    public function getNomcv()
    {
        $this->__load();
        return parent::getNomcv();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nomcv', 'loisirs', 'titre', 'presentation', 'user', 'formations', 'experiences', 'langues');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}